#!/usr/bin/env php
<?php

use Monolog\Handler\StreamHandler;
use Monolog\Logger;
use SAREhub\Commons\Misc\Parameters;
use SAREhub\Commons\Zmq\PublishSubscribe\Publisher;
use SAREhub\Commons\Zmq\PublishSubscribe\Subscriber;
use SAREhub\Component\Worker\Cli\Cli;
use SAREhub\Component\Worker\Cli\StartManagerCommand;
use SAREhub\Component\Worker\Cli\SystemdHelper;
use SAREhub\Component\Worker\Command\CommandService;
use SAREhub\Component\Worker\Command\ZmqCommandOutput;
use SAREhub\Component\Worker\Command\ZmqCommandReplyInput;
use Symfony\Component\Console\Application;

require dirname(__DIR__).'/vendor/autoload.php';

$config = new Parameters(include(__DIR__.'/config.php'));
$commandServiceConfig = $config->getRequiredAsMap('commandService');

$zmqContext = new ZMQContext();
$sessionId = uniqid(mt_rand(10000, 100000).time());

$handlers = [new StreamHandler(__DIR__.'/cliLog')];

Cli::newInstance()
  ->withApplication(new Application('Worker CLI', '0.1'))
  ->withConfig($config)
  ->withSessionId($sessionId)
  ->withLoggerFactory(function ($name) use ($handlers) {
	  return new Logger($name, $handlers);
  })
  ->withCommandService(
	CommandService::newInstance()
	  ->withCommandOutput(ZmqCommandOutput::newInstance()
		->withPublisher(Publisher::inContext($zmqContext)
		  ->bind($commandServiceConfig->getRequiredAsMap('commandOutput')->getRequired('endpoint')))
	  )->withCommandReplyInput(ZmqCommandReplyInput::newInstance()
		->withSubscriber(Subscriber::inContext($zmqContext)
		  ->bind($commandServiceConfig->getRequiredAsMap('commandReplyInput')->getRequired('endpoint'))
		  ->subscribe($commandServiceConfig->getRequiredAsMap('commandReplyInput')->getRequired('topic'))
		)
	  )
  )->registerCommand(StartManagerCommand::newInstance()->withSystemdHelper(new SystemdHelper()))
  ->run();

